public class SimpleStack {
    private int maxSize;
    private int[] stackArray;
    private int top;

    // Constructor
    public SimpleStack(int size) {
        maxSize = size;
        stackArray = new int[maxSize];
        top = -1;
    }

    // Push method
    public void push(int value) {
        if (isFull()) {
            System.out.println("Stack is full. Cannot push " + value);
            return;
        }
        stackArray[++top] = value;
    }

    // Pop method
    public int pop() {
        if (isEmpty()) {
            System.out.println("Stack is empty. Cannot pop.");
            return -1;
        }
        return stackArray[top--];
    }

    // Peek method
    public int peek() {
        if (isEmpty()) {
            System.out.println("Stack is empty. Cannot peek.");
            return -1;
        }
        return stackArray[top];
    }

    // IsEmpty method
    public boolean isEmpty() {
        return (top == -1);
    }

    // IsFull method
    public boolean isFull() {
        return (top == maxSize - 1);
    }

    // Main method to test the stack
    public static void main(String[] args) {
        SimpleStack stack = new SimpleStack(5);
        stack.push(10);
        stack.push(20);
        stack.push(30);

        System.out.println("Top element is: " + stack.peek()); // Output: 30
        System.out.println("Popped element is: " + stack.pop()); // Output: 30
        System.out.println("Top element after pop is: " + stack.peek()); // Output: 20

        stack.pop();
        stack.pop();
        stack.pop(); // Should indicate the stack is empty
    }
}
